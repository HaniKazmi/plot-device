{"version":3,"file":"index-BjA5laHd.js","sources":["../../node_modules/@mui/system/modern/Stack/createStack.js","../../node_modules/@mui/material/modern/Card/cardClasses.js","../../node_modules/@mui/material/modern/Card/Card.js","../../node_modules/@mui/material/modern/CardContent/cardContentClasses.js","../../node_modules/@mui/material/modern/CardContent/CardContent.js","../../node_modules/@mui/material/modern/Stack/Stack.js","../../node_modules/react-google-charts/dist/index.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import * as React from 'react';\nimport React__default, { useState, useEffect } from 'react';\n\n/**\n * Hook to load external script.\n * @param src - Source url to load.\n * @param onLoad - Success callback.\n * @param onError - Error callback.\n */ function useLoadScript(src) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [isSuccess, setIsSuccess] = useState(false);\n    const onLoad = ()=>{\n        setIsLoading(false);\n        setIsSuccess(true);\n    };\n    useEffect(()=>{\n        if (!document) {\n            const error = new Error(`[ScriptLoadingError] document not defined when attempting to load ${src}`);\n            setError(error);\n            return;\n        }\n        // Find script tag with same src in DOM.\n        const foundScript = document.querySelector(`script[src=\"${src}\"]`);\n        // Call onLoad if script marked as loaded.\n        if (foundScript?.dataset.loaded) {\n            onLoad();\n            return;\n        }\n        // Create or get existed tag.\n        const script = foundScript || document.createElement(\"script\");\n        // Set src if no script was found.\n        if (!foundScript) {\n            script.src = src;\n        }\n        // Mark script as loaded on load event.\n        const onLoadWithMarker = ()=>{\n            script.dataset.loaded = \"1\";\n            onLoad();\n        };\n        script.addEventListener(\"load\", onLoadWithMarker);\n        script.addEventListener(\"error\", (err)=>{\n            console.error(\"Failed to load script:\", src, err);\n            const error = new Error(`[ScriptLoadingError] Failed to load script: ${src}`);\n            setError(error);\n        });\n        // Add to DOM if not yet added.\n        if (!foundScript) {\n            document.head.append(script);\n        }\n    }, []);\n    return {\n        isLoading,\n        error,\n        isSuccess\n    };\n}\n\nconst isGoogleReady = (google)=>{\n    return google && google.charts;\n};\nconst isGoogleChartsReady = (props, google)=>{\n    const { controls, toolbarItems, getChartEditor } = props;\n    return google && google.charts && google.visualization && google.visualization.ChartWrapper && google.visualization.Dashboard && (!controls || google.visualization.ChartWrapper) && (!getChartEditor || google.visualization.ChartEditor) && (!toolbarItems || google.visualization.drawToolbar);\n};\nconst getGoogleInstanceFromWindow = (props)=>{\n    // @ts-expect-error Getting object from global namespace.\n    const google = window.google;\n    return google;\n};\n/**\n * Hook to load Google Charts JS API.\n * @param params - Load parameters.\n * @param [params.chartVersion] - Chart version to load.\n * @param [params.chartPackages] - Packages to load.\n * @param [params.chartLanguage] - Languages to load.\n * @param [params.mapsApiKey] - Google Maps api key.\n * @returns\n */ function useLoadGoogleCharts(props) {\n    const { chartVersion = \"current\", chartPackages = [\n        \"corechart\",\n        \"controls\"\n    ], chartLanguage = \"en\", mapsApiKey } = props;\n    const [googleCharts, setGoogleCharts] = useState(null);\n    const [scriptInitializationError, setScriptInitializationError] = useState(null);\n    const [googleChartsInitializationError, setGoogleChartsInitializationError] = useState(null);\n    const { isLoading, error: scriptLoadingError, isSuccess } = useLoadScript(props.chartLoaderScriptUrl || \"https://www.gstatic.com/charts/loader.js\");\n    useEffect(()=>{\n        if (!isSuccess) {\n            return;\n        }\n        const google = getGoogleInstanceFromWindow();\n        if (!isGoogleReady(google)) {\n            const error = new Error(\"[ScriptInitializationError] Script loaded but Google not attached to window.\");\n            setScriptInitializationError(error);\n            return;\n        }\n        if (isGoogleChartsReady(props, google)) {\n            setGoogleCharts(google);\n            return;\n        }\n        google.charts.load(chartVersion, {\n            packages: chartPackages,\n            language: chartLanguage,\n            mapsApiKey\n        });\n        google.charts.setOnLoadCallback(()=>{\n            if (!isGoogleChartsReady(props, google)) {\n                const error = new Error(\"[GoogleChartsInitializationError] Google Charts not ready after load callback.\");\n                console.error(error);\n                setGoogleChartsInitializationError(error);\n                return;\n            }\n            setGoogleCharts(google);\n        });\n    }, [\n        isSuccess\n    ]);\n    return {\n        error: scriptLoadingError || scriptInitializationError || googleChartsInitializationError,\n        isLoading,\n        google: googleCharts\n    };\n}\n\nconst chartDefaultProps = {\n    // <DEPRECATED_PROPS>\n    legend_toggle: false,\n    // </DEPRECATED_PROPS>\n    options: {},\n    legendToggle: false,\n    getChartWrapper: ()=>{},\n    spreadSheetQueryParameters: {\n        headers: 1,\n        gid: 1\n    },\n    rootProps: {},\n    chartWrapperParams: {},\n    chartLoaderScriptUrl: \"https://www.gstatic.com/charts/loader.js\"\n};\n\nconst GoogleChartControls = (props)=>{\n    const { isReady, chartControls, filter } = props;\n    if (!isReady || !chartControls || !chartControls?.length) {\n        return null;\n    }\n    return /*#__PURE__*/ React__default.createElement(React__default.Fragment, null, chartControls.filter((param)=>{\n        let { controlProp, control } = param;\n        return filter ? filter({\n            control,\n            controlProp\n        }) : true;\n    }).map((param)=>{\n        let { control } = param;\n        return /*#__PURE__*/ React__default.createElement(\"div\", {\n            key: control.getContainerId(),\n            id: control.getContainerId()\n        });\n    }));\n};\n\nlet uniqueID = 0;\nconst generateUniqueID = ()=>{\n    uniqueID += 1;\n    return `reactgooglegraph-${uniqueID}`;\n};\n\n/**\n * An internal helper class for creating and managing Google Charts controls.\n * Offers high-level methods to interact with the Google Chart Controls.\n */ class GoogleChartControlsInternal {\n    /**\n   * Initialize the controls once chart is ready\n   */ static initializeControls = (googleChartControls)=>{\n        for(let i = 0; i < googleChartControls.length; i += 1){\n            const { controlType, options, controlWrapperParams } = googleChartControls[i].controlProp;\n            if (controlWrapperParams && \"state\" in controlWrapperParams) {\n                googleChartControls[i].control.setState(controlWrapperParams[\"state\"]);\n            }\n            googleChartControls[i].control.setOptions(options);\n            googleChartControls[i].control.setControlType(controlType);\n        }\n    };\n    /**\n   * listen to the control events (ready, statechange, error) specified in the controlEvents prop\n   */ static listenToControlEvents = (googleChartControls, props)=>{\n        const { google } = props;\n        return googleChartControls.flatMap((chartControl)=>{\n            const { control, controlProp } = chartControl;\n            const { controlEvents = [] } = controlProp;\n            return controlEvents.map((event)=>{\n                const { callback, eventName } = event;\n                return google.visualization.events.addListener(control, eventName, function() {\n                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                        args[_key] = arguments[_key];\n                    }\n                    callback({\n                        chartWrapper: null,\n                        controlWrapper: control,\n                        props: props,\n                        google: google,\n                        eventArgs: args\n                    });\n                });\n            });\n        });\n    };\n    /**\n   * If controlID is not provided, generate a unique controlID\n   */ static createControlId = (id)=>{\n        let controlID;\n        if (typeof id === \"undefined\") {\n            controlID = `googlechart-control-${generateUniqueID()}`;\n        } else {\n            controlID = id;\n        }\n        return controlID;\n    };\n    /**\n   * Map the control props to Google Chart Controls\n   */ static createChartControls = (props)=>{\n        const { controls, google } = props;\n        if (!controls) {\n            return null;\n        }\n        return controls.map((control, i)=>{\n            const { controlID: controlIDMaybe, controlType, options: controlOptions, controlWrapperParams } = control;\n            const controlID = this.createControlId(controlIDMaybe);\n            return {\n                controlProp: control,\n                control: new google.visualization.ControlWrapper({\n                    containerId: controlID,\n                    controlType,\n                    options: controlOptions,\n                    ...controlWrapperParams\n                })\n            };\n        });\n    };\n    static addControls = (props)=>{\n        const { chartWrapper, chartDashboard } = props;\n        const googleChartControls = this.createChartControls(props);\n        if (!googleChartControls || !chartDashboard || !chartWrapper) {\n            return null;\n        }\n        chartDashboard.bind(googleChartControls.map((param)=>{\n            let { control } = param;\n            return control;\n        }), chartWrapper);\n        this.initializeControls(googleChartControls);\n        return googleChartControls;\n    };\n}\n\nconst useCreateChartControls = (controls)=>{\n    const [chartControls, setChartControls] = React.useState(null);\n    const controlAndProp = React.useMemo(()=>{\n        if (!chartControls || !controls) return null;\n        return controls.map((controlProp, i)=>{\n            const control = chartControls[i];\n            return control ? {\n                controlProp,\n                control\n            } : undefined;\n        }).flatMap((controlAndProp)=>controlAndProp ? [\n                controlAndProp\n            ] : []);\n    }, [\n        chartControls,\n        controls\n    ]);\n    return [\n        controlAndProp,\n        setChartControls\n    ];\n};\nconst useListenToControlEvents = (chartControls, props)=>{\n    React.useEffect(()=>{\n        const listeners = GoogleChartControlsInternal.listenToControlEvents(chartControls ?? [], props);\n        return ()=>{\n            listeners.forEach((listener)=>{\n                props.google.visualization.events.removeListener(listener);\n            });\n        };\n    }, [\n        chartControls,\n        props\n    ]);\n};\nconst useChartControls = (props)=>{\n    const [chartControls, setChartControls] = useCreateChartControls(props.controls);\n    useListenToControlEvents(chartControls ?? [], props);\n    /**\n   * Render the container divs for the controls\n   */ const renderControl = (filter)=>{\n        const { chartWrapper, chartDashboard } = props;\n        return /*#__PURE__*/ React.createElement(GoogleChartControls, {\n            ...props,\n            isReady: Boolean(chartWrapper && chartDashboard),\n            chartControls: chartControls,\n            filter: filter\n        });\n    };\n    return {\n        addControls: (props)=>{\n            const controls = GoogleChartControlsInternal.addControls(props);\n            setChartControls(controls?.map((control)=>control.control) ?? null);\n        },\n        renderControl\n    };\n};\n\nconst useChartId = (props)=>{\n    const chartIdRef = React.useRef(null);\n    const getChartId = ()=>{\n        const { graphID, graph_id } = props;\n        const chartIdFromProps = graphID || graph_id;\n        let currentChartId;\n        if (chartIdFromProps) {\n            currentChartId = chartIdFromProps;\n        } else {\n            currentChartId = chartIdRef.current || generateUniqueID();\n        }\n        chartIdRef.current = currentChartId;\n        return chartIdRef.current;\n    };\n    const chartId = getChartId();\n    return {\n        chartId\n    };\n};\n\nconst DEFAULT_CHART_COLORS = [\n    \"#3366CC\",\n    \"#DC3912\",\n    \"#FF9900\",\n    \"#109618\",\n    \"#990099\",\n    \"#3B3EAC\",\n    \"#0099C6\",\n    \"#DD4477\",\n    \"#66AA00\",\n    \"#B82E2E\",\n    \"#316395\",\n    \"#994499\",\n    \"#22AA99\",\n    \"#AAAA11\",\n    \"#6633CC\",\n    \"#E67300\",\n    \"#8B0707\",\n    \"#329262\",\n    \"#5574A6\",\n    \"#3B3EAC\"\n];\n\nconst loadDataTableFromSpreadSheet = async function(googleViz, spreadSheetUrl) {\n    let urlParams = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    return new Promise((resolve, reject)=>{\n        const headers = `${urlParams.headers ? `headers=${urlParams.headers}` : `headers=0`}`;\n        const queryString = `${urlParams.query ? `&tq=${encodeURIComponent(urlParams.query)}` : ``}`;\n        const gid = `${urlParams.gid ? `&gid=${urlParams.gid}` : \"\"}`;\n        const sheet = `${urlParams.sheet ? `&sheet=${urlParams.sheet}` : \"\"}`;\n        const access_token = `${urlParams.access_token ? `&access_token=${urlParams.access_token}` : \"\"}`;\n        const urlQueryString = `${headers}${gid}${sheet}${queryString}${access_token}`;\n        const urlToSpreadSheet = `${spreadSheetUrl}/gviz/tq?${urlQueryString}`; //&tq=${queryString}`;\n        const query = new googleViz.visualization.Query(urlToSpreadSheet);\n        query.send((response)=>{\n            if (response.isError()) {\n                reject(`Error in query:  ${response.getMessage()} ${response.getDetailedMessage()}`);\n            } else {\n                resolve(response.getDataTable());\n            }\n        });\n    });\n};\n\nconst GRAY_COLOR = \"#CCCCCC\";\n/**\n * An internal helper class around the Google Chart API.\n * Offers high-level methods to interact with the Google Chart API.\n */ class GoogleChartInternal {\n    static grayOutHiddenColumnsLabel = (props, hiddenColumns)=>{\n        const { googleChartWrapper, options } = props;\n        if (!googleChartWrapper) {\n            console.error(\"googleChartWrapper is not defined\");\n            return;\n        }\n        const dataTable = googleChartWrapper.getDataTable();\n        if (!dataTable) return;\n        const columnCount = dataTable.getNumberOfColumns();\n        const hasAHiddenColumn = hiddenColumns.length > 0;\n        if (hasAHiddenColumn === false) return;\n        const colors = Array.from({\n            length: columnCount - 1\n        }).map((_dontcare, i)=>{\n            const columnID = this.getColumnId(dataTable, i + 1);\n            if (hiddenColumns.includes(columnID)) {\n                return GRAY_COLOR;\n            } else if (options && options.colors) {\n                return options.colors[i];\n            } else {\n                return DEFAULT_CHART_COLORS[i];\n            }\n        });\n        googleChartWrapper.setOptions({\n            ...options,\n            colors\n        });\n        googleChartWrapper.draw();\n    };\n    /**\n   * Listens to user clicking on the legend to toggle the visibility of a column.\n   * When a user clicks on a legend item, the column id is added to / removed from the hiddenColumns state.\n   */ static listenToLegendToggle = (props, hiddenColumnsState)=>{\n        const [hiddenColumns, setHiddenColumns] = hiddenColumnsState;\n        const { google, googleChartWrapper } = props;\n        if (!googleChartWrapper) {\n            console.error(\"googleChartWrapper is not defined\");\n            return;\n        }\n        return google.visualization.events.addListener(googleChartWrapper, \"select\", ()=>{\n            const chart = googleChartWrapper.getChart();\n            const selection = chart.getSelection();\n            const dataTable = googleChartWrapper.getDataTable();\n            if (selection.length === 0 || // We want to listen to when a whole row is selected. This is the case only when row === null\n            selection[0].row !== null || !dataTable) {\n                return;\n            }\n            const columnIndex = selection[0].column;\n            const columnID = this.getColumnId(dataTable, columnIndex);\n            // If the column is hidden remove it from state, otherwise add it\n            if (hiddenColumns?.includes(columnID)) {\n                setHiddenColumns((state)=>[\n                        ...state.filter((colID)=>colID !== columnID)\n                    ]);\n            } else {\n                setHiddenColumns((state)=>[\n                        ...state,\n                        columnID\n                    ]);\n            }\n        });\n    };\n    /**\n   * (Re-)Draw a Google Chart with the given data, options, and chart type.\n   */ static draw = async (props)=>{\n        const { data, diffdata, rows, columns, options, chartType, formatters, spreadSheetUrl, spreadSheetQueryParameters, googleChartDashboard, googleChartWrapper, google, hiddenColumns, legendToggle, legend_toggle } = props;\n        if (!googleChartWrapper) {\n            console.error(\"draw was called with googleChartWrapper = null\");\n            return;\n        }\n        let dataTable;\n        let chartDiff = null;\n        if (diffdata) {\n            const oldData = google.visualization.arrayToDataTable(diffdata.old);\n            const newData = google.visualization.arrayToDataTable(diffdata.new);\n            chartDiff = google.visualization[chartType].prototype.computeDiff(oldData, newData);\n        }\n        if (data) {\n            if (data instanceof google.visualization.DataTable) {\n                dataTable = data;\n            } else if (Array.isArray(data)) {\n                dataTable = google.visualization.arrayToDataTable(data);\n            } else {\n                dataTable = new google.visualization.DataTable(data);\n            }\n        } else if (rows && columns) {\n            dataTable = google.visualization.arrayToDataTable([\n                columns,\n                ...rows\n            ]);\n        } else if (spreadSheetUrl) {\n            dataTable = await loadDataTableFromSpreadSheet(google, spreadSheetUrl, spreadSheetQueryParameters);\n        } else {\n            dataTable = google.visualization.arrayToDataTable([]);\n        }\n        const columnCount = dataTable.getNumberOfColumns();\n        const viewColumns = Array(columnCount).fill(0).map((_c, i)=>{\n            const columnID = this.getColumnId(dataTable, i);\n            if (hiddenColumns.includes(columnID)) {\n                return {\n                    label: dataTable.getColumnLabel(i),\n                    type: dataTable.getColumnType(i),\n                    calc: ()=>null\n                };\n            } else {\n                return i;\n            }\n        });\n        const chart = googleChartWrapper.getChart();\n        if (googleChartWrapper.getChartType() === \"Timeline\") {\n            chart && chart.clearChart();\n        }\n        googleChartWrapper.setChartType(chartType);\n        googleChartWrapper.setOptions(options || {});\n        const viewTable = new google.visualization.DataView(dataTable);\n        viewTable.setColumns(viewColumns);\n        googleChartWrapper.setDataTable(viewTable);\n        googleChartWrapper.draw();\n        if (googleChartDashboard) {\n            googleChartDashboard.draw(dataTable);\n        }\n        if (chartDiff) {\n            googleChartWrapper.setDataTable(chartDiff);\n            googleChartWrapper.draw();\n        }\n        if (formatters) {\n            this.applyFormatters({\n                dataTable,\n                formatters,\n                google\n            });\n            googleChartWrapper.setDataTable(dataTable);\n            googleChartWrapper.draw();\n        }\n        if (legendToggle === true || legend_toggle === true) {\n            this.grayOutHiddenColumnsLabel(props, hiddenColumns);\n        }\n        return;\n    };\n    /**\n   * Get the column ID of a column in a GoogleDataTable.\n   * If the column has an ID, return the ID, otherwise return the label.\n   */ static getColumnId = (dataTable, columnIndex)=>{\n        return dataTable.getColumnId(columnIndex) || dataTable.getColumnLabel(columnIndex);\n    };\n    /**\n   * Apply Chart Formatters passed under the formatters prop to the GoogleDataTable\n   */ static applyFormatters = (param)=>{\n        let { dataTable, formatters, google } = param;\n        for (let formatter of formatters){\n            switch(formatter.type){\n                case \"ArrowFormat\":\n                    {\n                        const vizFormatter = new google.visualization.ArrowFormat(formatter.options);\n                        vizFormatter.format(dataTable, formatter.column);\n                        return;\n                    }\n                case \"BarFormat\":\n                    {\n                        const vizFormatter = new google.visualization.BarFormat(formatter.options);\n                        vizFormatter.format(dataTable, formatter.column);\n                        return;\n                    }\n                case \"ColorFormat\":\n                    {\n                        const vizFormatter = new google.visualization.ColorFormat(formatter.options);\n                        const { ranges } = formatter;\n                        if (ranges) {\n                            for (let range of ranges){\n                                vizFormatter.addRange(...range);\n                            }\n                        }\n                        vizFormatter.format(dataTable, formatter.column);\n                        return;\n                    }\n                case \"DateFormat\":\n                    {\n                        const vizFormatter = new google.visualization.DateFormat(formatter.options);\n                        vizFormatter.format(dataTable, formatter.column);\n                        return;\n                    }\n                case \"NumberFormat\":\n                    {\n                        const vizFormatter = new google.visualization.NumberFormat(formatter.options);\n                        vizFormatter.format(dataTable, formatter.column);\n                        return;\n                    }\n                case \"PatternFormat\":\n                    {\n                        const vizFormatter = new google.visualization.PatternFormat(formatter.options);\n                        vizFormatter.format(dataTable, formatter.column);\n                        return;\n                    }\n                default:\n                    {\n                        console.warn(`Unknown formatter type: ${formatter.type}`);\n                        return;\n                    }\n            }\n        }\n    };\n}\n\nconst useGoogleChartDataTable = (props)=>{\n    const { google, googleChartWrapper, googleChartDashboard } = props;\n    const [hiddenColumns, setHiddenColumns] = React.useState([]);\n    // Re-draw the chart when hiddenColumns change\n    React.useEffect(()=>{\n        if (!googleChartWrapper) {\n            return;\n        }\n        GoogleChartInternal.draw({\n            ...props,\n            hiddenColumns,\n            googleChartWrapper,\n            googleChartDashboard,\n            google\n        });\n    }, [\n        hiddenColumns,\n        props.data,\n        props.rows,\n        props.columns,\n        props.options,\n        props.chartLoaderScriptUrl,\n        props.chartType,\n        props.formatters,\n        props.spreadSheetUrl,\n        props.spreadSheetQueryParameters,\n        props.legendToggle,\n        props.legend_toggle\n    ]);\n    // Re-draw the chart when the window is resized\n    const onResize = ()=>{\n        const { googleChartWrapper } = props;\n        if (!googleChartWrapper) {\n            return;\n        }\n        googleChartWrapper.draw();\n    };\n    // Draw the chart when the google charts wrapper is ready and when the hiddenColumns change\n    const initialize = (googleChartWrapper)=>{\n        const listeners = [];\n        const { legendToggle, legend_toggle } = props;\n        GoogleChartInternal.draw({\n            ...props,\n            hiddenColumns,\n            googleChartWrapper,\n            googleChartDashboard,\n            google\n        });\n        window.addEventListener(\"resize\", onResize);\n        if (legend_toggle || legendToggle) {\n            const listener = GoogleChartInternal.listenToLegendToggle(props, [\n                hiddenColumns,\n                setHiddenColumns\n            ]);\n            if (listener) listeners.push(listener);\n        }\n        return listeners;\n    };\n    // Remove event listeners and clear the chart when the component is unmounted\n    const destroy = (googleChartWrapper, listeners)=>{\n        window.removeEventListener(\"resize\", onResize);\n        listeners.forEach((listener)=>{\n            google.visualization.events.removeListener(listener);\n        });\n        if (googleChartWrapper.getChartType() === \"Timeline\") {\n            googleChartWrapper.getChart() && googleChartWrapper.getChart().clearChart();\n        }\n    };\n    React.useEffect(()=>{\n        if (!googleChartWrapper) {\n            return;\n        }\n        const listeners = initialize(googleChartWrapper);\n        return ()=>{\n            destroy(googleChartWrapper, listeners);\n        };\n    }, [\n        googleChartWrapper,\n        initialize,\n        destroy\n    ]);\n};\n\nconst listenToEvents = (props)=>{\n    const { chartEvents, google, googleChartWrapper } = props;\n    if (!chartEvents) {\n        return;\n    }\n    if (!googleChartWrapper) {\n        console.warn(\"listenToEvents was called before chart wrapper ready.\");\n        return;\n    }\n    return chartEvents.map((param)=>{\n        let { eventName, callback } = param;\n        return google.visualization.events.addListener(googleChartWrapper, eventName, function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            callback({\n                chartWrapper: googleChartWrapper,\n                props,\n                google: google,\n                eventArgs: args\n            });\n        });\n    });\n};\nconst useGoogleChartEvents = (props)=>{\n    useEffect(()=>{\n        if (!props.googleChartWrapper) return;\n        const listeners = listenToEvents(props);\n        return ()=>{\n            listeners?.forEach((listener)=>{\n                props.google.visualization.events.removeListener(listener);\n            });\n        };\n    }, [\n        props\n    ]);\n};\n\nconst GoogleChart = (props)=>{\n    const [googleChartWrapper, setGoogleChartWrapper] = React.useState(null);\n    // const [isReady, setIsReady] = React.useState<boolean>(false);\n    const [googleChartDashboard, setGoogleChartDashboard] = React.useState(null);\n    const { addControls, renderControl } = useChartControls({\n        ...props,\n        chartDashboard: googleChartDashboard,\n        chartWrapper: googleChartWrapper\n    });\n    useGoogleChartEvents({\n        ...props,\n        googleChartWrapper\n    });\n    const { chartId } = useChartId(props);\n    const dashboardRef = React.useRef(null);\n    const toolbarRef = React.useRef(null);\n    React.useEffect(()=>{\n        const { options, google, chartType, chartWrapperParams, toolbarItems, getChartEditor, getChartWrapper, onLoad } = props;\n        const chartConfig = {\n            chartType,\n            options,\n            containerId: chartId,\n            ...chartWrapperParams\n        };\n        // Create ChartWrapper instance, pass it to the user and store it in state\n        const chartWrapper = new google.visualization.ChartWrapper(chartConfig);\n        chartWrapper.setOptions(options || {});\n        getChartWrapper?.(chartWrapper, google);\n        // Create Dashboard instance, needed for controls\n        const chartDashboard = new google.visualization.Dashboard(dashboardRef.current);\n        // Create toolbar if needed\n        if (toolbarItems) {\n            google.visualization.drawToolbar(toolbarRef.current, toolbarItems);\n        }\n        // Create ChartEditor instance if needed and pass it to the user\n        let chartEditor = null;\n        if (getChartEditor) {\n            chartEditor = new google.visualization.ChartEditor();\n            getChartEditor({\n                chartEditor,\n                chartWrapper,\n                google\n            });\n        }\n        // Create and add controls to the chart / dashboard\n        addControls({\n            ...props,\n            chartDashboard,\n            chartWrapper\n        });\n        setGoogleChartWrapper(chartWrapper);\n        setGoogleChartDashboard(chartDashboard);\n        onLoad?.(google, {\n            google,\n            chartWrapper,\n            chartEditor,\n            chartDashboard\n        });\n    }, []);\n    useGoogleChartDataTable({\n        ...props,\n        googleChartWrapper,\n        googleChartDashboard\n    });\n    const renderChart = ()=>{\n        const { width, height, options, style, className, rootProps, google } = props;\n        const divStyle = {\n            height: height || options && options.height,\n            width: width || options && options.width,\n            ...style\n        };\n        return /*#__PURE__*/ React.createElement(\"div\", {\n            id: chartId,\n            style: divStyle,\n            className: className,\n            ...rootProps\n        });\n    };\n    const renderToolBar = ()=>{\n        if (!props.toolbarItems) return null;\n        return /*#__PURE__*/ React.createElement(\"div\", {\n            ref: toolbarRef\n        });\n    };\n    const { width, height, options, style } = props;\n    const divStyle = {\n        height: height || options && options.height,\n        width: width || options && options.width,\n        ...style\n    };\n    // If render prop is provided, give the user full control over the rendering by passing renderChart, renderControl and renderToolbar functions\n    if (props.render) {\n        return /*#__PURE__*/ React.createElement(\"div\", {\n            ref: dashboardRef,\n            style: divStyle\n        }, /*#__PURE__*/ React.createElement(\"div\", {\n            ref: toolbarRef,\n            id: \"toolbar\"\n        }), props.render({\n            renderChart,\n            renderControl,\n            renderToolbar: renderToolBar\n        }));\n    } else {\n        return /*#__PURE__*/ React.createElement(\"div\", {\n            ref: dashboardRef,\n            style: divStyle\n        }, renderControl((param)=>{\n            let { controlProp } = param;\n            return controlProp.controlPosition !== \"bottom\";\n        }), renderChart(), renderControl((param)=>{\n            let { controlProp } = param;\n            return controlProp.controlPosition === \"bottom\";\n        }), renderToolBar());\n    }\n};\n\nconst ChartContext = /*#__PURE__*/ React.createContext(chartDefaultProps);\nconst ContextProvider = (param)=>{\n    let { children, value } = param;\n    return /*#__PURE__*/ React.createElement(ChartContext.Provider, {\n        value: value\n    }, children);\n};\n\n/**\n * Loads Google Charts JS and renders the GoogleChart component.\n */ const ChartView = (props)=>{\n    const { google, isLoading, error } = useLoadGoogleCharts(props);\n    if (isLoading) {\n        return props.loader ?? null;\n    }\n    if (error) {\n        return props.errorElement ?? null;\n    }\n    if (google) {\n        return /*#__PURE__*/ React__default.createElement(GoogleChart, {\n            google: google,\n            ...props\n        });\n    }\n    return null;\n};\n/**\n * Updates the context with the props and renders ChartView.\n */ const Chart = (userProps)=>{\n    const props = {\n        ...chartDefaultProps,\n        ...userProps\n    };\n    return /*#__PURE__*/ React__default.createElement(ContextProvider, {\n        value: props\n    }, /*#__PURE__*/ React__default.createElement(ChartView, props));\n};\n\n// Complete Google Charts Type Definition : https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/google.visualization/index.d.ts\nvar GoogleDataTableColumnRoleType;\n(function(GoogleDataTableColumnRoleType) {\n    GoogleDataTableColumnRoleType[\"annotation\"] = \"annotation\";\n    GoogleDataTableColumnRoleType[\"annotationText\"] = \"annotationText\";\n    GoogleDataTableColumnRoleType[\"certainty\"] = \"certainty\";\n    GoogleDataTableColumnRoleType[\"emphasis\"] = \"emphasis\";\n    GoogleDataTableColumnRoleType[\"interval\"] = \"interval\";\n    GoogleDataTableColumnRoleType[\"scope\"] = \"scope\";\n    GoogleDataTableColumnRoleType[\"style\"] = \"style\";\n    GoogleDataTableColumnRoleType[\"tooltip\"] = \"tooltip\";\n    GoogleDataTableColumnRoleType[\"domain\"] = \"domain\";\n})(GoogleDataTableColumnRoleType || (GoogleDataTableColumnRoleType = {}));\n\nexport { Chart, GoogleDataTableColumnRoleType, Chart as default };\n//# sourceMappingURL=index.js.map\n"],"names":["defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","props","styles","useThemePropsDefault","useThemePropsSystem","joinChildren","children","separator","childrenArray","React.Children","output","child","index","React.cloneElement","getSideFromDirection","direction","style","ownerState","theme","handleBreakpoints","resolveBreakpointValues","propValue","transformer","createUnarySpacing","base","acc","breakpoint","directionValues","spacingValues","breakpoints","previousDirectionValue","deepmerge","getValue","mergeBreakpointsInOrder","createStack","options","createStyledComponent","useThemeProps","componentName","useUtilityClasses","composeClasses","slot","generateUtilityClass","StackRoot","React.forwardRef","inProps","ref","themeProps","extendSxProp","component","spacing","divider","className","useFlexGap","other","classes","clsx","getCardUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","Card","useDefaultProps","raised","getCardContentUtilityClass","CardContentRoot","CardContent","Stack","useLoadScript","src","isLoading","setIsLoading","useState","error","setError","isSuccess","setIsSuccess","onLoad","useEffect","foundScript","script","onLoadWithMarker","err","isGoogleReady","google","isGoogleChartsReady","controls","toolbarItems","getChartEditor","getGoogleInstanceFromWindow","useLoadGoogleCharts","chartVersion","chartPackages","chartLanguage","mapsApiKey","googleCharts","setGoogleCharts","scriptInitializationError","setScriptInitializationError","googleChartsInitializationError","setGoogleChartsInitializationError","scriptLoadingError","chartDefaultProps","GoogleChartControls","isReady","chartControls","filter","React__default","param","controlProp","control","uniqueID","generateUniqueID","GoogleChartControlsInternal","googleChartControls","i","controlType","controlWrapperParams","chartControl","controlEvents","event","callback","eventName","_len","args","_key","id","controlID","controlIDMaybe","controlOptions","chartWrapper","chartDashboard","useCreateChartControls","setChartControls","React.useState","React.useMemo","controlAndProp","useListenToControlEvents","React.useEffect","listeners","listener","useChartControls","React.createElement","useChartId","chartIdRef","React.useRef","graphID","graph_id","chartIdFromProps","currentChartId","DEFAULT_CHART_COLORS","loadDataTableFromSpreadSheet","googleViz","spreadSheetUrl","urlParams","resolve","reject","headers","queryString","gid","sheet","access_token","urlQueryString","urlToSpreadSheet","response","GRAY_COLOR","GoogleChartInternal","hiddenColumns","googleChartWrapper","dataTable","columnCount","colors","_dontcare","columnID","hiddenColumnsState","setHiddenColumns","selection","columnIndex","state","colID","data","diffdata","rows","columns","chartType","formatters","spreadSheetQueryParameters","googleChartDashboard","legendToggle","legend_toggle","chartDiff","oldData","newData","viewColumns","_c","chart","viewTable","formatter","vizFormatter","ranges","range","useGoogleChartDataTable","onResize","initialize","destroy","listenToEvents","chartEvents","useGoogleChartEvents","GoogleChart","setGoogleChartWrapper","setGoogleChartDashboard","addControls","renderControl","chartId","dashboardRef","toolbarRef","chartWrapperParams","getChartWrapper","chartConfig","chartEditor","renderChart","width","height","rootProps","divStyle","renderToolBar","ChartContext","React.createContext","ContextProvider","value","ChartView","Chart","userProps","GoogleDataTableColumnRoleType"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}