import{r as x,j as t,d as g,C as m,T as j,a as T}from"./index-d623a0ad.js";import{B as A,C as M,F as v,S as H,a as F,D as h,T as E,b as O,c as P,d as S,U as R,e as G,A as W,P as Y,f as I,g as _,h as B,i as U,j as N}from"./Timeline-b0986750.js";import{S as $}from"./Stack-b937cb5f.js";import{F as f,S as b,G as w,s as C,T as q}from"./types-d52c3d01.js";import{a as z}from"./index-57becb73.js";const J={name:!1,status:!0,none:!1},K=({data:e,measure:n})=>{const[s,o]=x.useState("none"),[l,a]=x.useState(!1),[r,i]=x.useState(!0),c=e.flatMap(u=>u.s),d=Q(c,s,n,l);return t.jsx(A,{grouped:d,cumulative:l,stack:r,children:t.jsx(M,{title:n==="Episodes"?"Episodes Watched":"Hours Watched",action:t.jsxs(v,{children:[t.jsx(H,{options:Object.keys(J),value:s,setValue:o}),t.jsxs($,{direction:"row",children:[t.jsx(f,{label:"Cumulative",control:t.jsx(b,{checked:l,onChange:(u,p)=>a(p)})}),t.jsx(f,{label:"Stack",control:t.jsx(b,{checked:r,onChange:(u,p)=>i(p),disabled:l})})]})]})})})},Q=(e,n,s,o)=>{const l=e.reduce((a,r)=>{var u,p;const{show:i}=r,c=n==="none"?"":i[n],d=o?(u=r.startDate)==null?void 0:u.toISOString().substring(0,7):(p=r.startDate)==null?void 0:p.getFullYear().toString();return!d||!r.minutes||(a[c]??(a[c]={color:"",data:{}}),a[c].data[d]=(a[c].data[d]||0)+(s==="Episodes"?r.e:r.minutes)),a},{});return s==="Hours"&&Object.values(l).forEach(({data:a})=>Object.entries(a).forEach(([r,i])=>a[r]=Math.floor(i/60))),l},V=e=>"name"in e,L=({item:e,...n})=>{const s=V(e)?e:e.show;return t.jsx(F,{alt:s.name,image:s.banner,detailComponent:o=>{var l;return t.jsx(z,{sx:{background:o,color:a=>o&&a.palette.getContrastText(o)},children:t.jsxs(w,{container:!0,spacing:1,children:[t.jsx(X,{colour:o,item:s}),t.jsx(h,{colour:o,label:"Start Date",value:s.startDate.toLocaleDateString()}),t.jsx(h,{colour:o,label:"End Date",value:(l=s.endDate)==null?void 0:l.toLocaleDateString()}),t.jsx(h,{colour:C(s),label:"Status",value:s.status}),t.jsx(h,{colour:o,label:"Last Watched",value:`S${s.s.length}E${s.s.at(-1).e}`}),t.jsx(h,{colour:o,label:"Hours",value:Math.floor(s.minutes/60)}),t.jsx(h,{colour:o,label:"Episodes",value:s.e})]})})},...n})},y=new Date(2008,0,1),D=g(y,m),X=({colour:e,item:n})=>{if(!n.startDate||n.startDate<y)return null;let s=y;const o=n.s.flatMap((l,a)=>{const r=[];if(s<l.startDate){const u=g(s,l.startDate)/D*100;r.push(t.jsx(E,{percent:u},`${l.s}-before`))}const i=l.endDate??m,c=Math.max(g(l.startDate,i)/D*100,.5);return r.push(t.jsx(O,{percent:c,backgroundColour:[`${a%2===0?"secondary":"primary"}.light`,`${a%2===0?"secondary":"primary"}.main`],tooltip:t.jsxs(t.Fragment,{children:[t.jsxs(j,{variant:"h6",align:"center",children:["S",l.s]}),t.jsxs(j,{children:[l.startDate.toLocaleDateString()," - ",i.toLocaleDateString()]}),t.jsxs(j,{children:[l.e," Episodes"]}),t.jsxs(j,{children:[Math.floor(l.minutes/60)," Hours"]})]})},l.s)),s=new Date(i),s.setDate(s.getDate()+1),r});if(s<m){const a=g(s,m)/D*100;o.push(t.jsx(E,{percent:a},"last"))}return t.jsx(P,{segments:o,colour:e})},Z=({data:e})=>t.jsxs(w,{container:!0,spacing:1,alignItems:"stretch",children:[t.jsx(tt,{data:e}),t.jsx(et,{data:e}),t.jsx(st,{data:e}),t.jsx(at,{data:e}),t.jsx(rt,{data:e}),t.jsx(nt,{data:e})]}),tt=({data:e})=>{const n=e.length,s=e.sum("e"),o=Math.floor(e.sum("minutes")/60);return t.jsx(S,{icon:t.jsx(q,{}),title:"All Time",content:[["Shows",n],["Episodes",s],["Hours",o]]})},et=({data:e})=>{const n=e.flatMap(a=>a.s).filter(a=>a.startDate.getFullYear()===T),s=n.length,o=n.sum("e"),l=Math.floor(n.sum("minutes")/60);return t.jsx(S,{icon:t.jsx(R,{}),title:`In ${T}`,content:[["Seasons",s],["Episodes",o],["Hours",l]]})},st=({data:e})=>{const n=e.flatMap(a=>a.s).reduce((a,r)=>{const i=r.startDate.getFullYear().toString();return!i||!r.minutes||(a[i]??(a[i]=[0,0,0]),a[i]=[a[i][0]+1,a[i][1]+r.e,a[i][2]+r.minutes]),a},{}),s=Math.floor(Object.values(n).sum(0)/Object.keys(n).length),o=Math.floor(Object.values(n).sum(1)/Object.keys(n).length),l=Math.floor(Object.values(n).sum(2)/Object.keys(n).length/60);return t.jsx(S,{icon:t.jsx(G,{}),title:"Yearly Average",content:[["Seasons",s],["Episodes",o],["Hours",l]]})},at=({data:e})=>{const n=e.flatMap(a=>a.s),s=Math.round(n.length/e.length),o=Math.round(n.sum("e")/e.length),l=Math.floor(n.sum("minutes")/60/e.length);return t.jsx(S,{icon:t.jsx(W,{}),title:"Show Average",content:[["Seasons",s],["Episodes",o],["Hours",l]]})},nt=({data:e})=>{const n=e.flatMap(s=>s.s).filter(s=>s.endDate).sort((s,o)=>s.endDate<o.endDate?1:-1).slice(0,6);return t.jsx(k,{icon:t.jsx(Y,{}),title:"Recently Finished",content:n,width:[12,12,12],pictureWidth:[6,4,2],chipComponent:({show:s})=>[s.status,C(s)],labelComponent:ot})},ot=e=>{var n;return[[`S ${e.s}`,((n=e.endDate)==null?void 0:n.toLocaleDateString())??""],[`${e.e} Eps`,`${I(Math.round(e.minutes/60))} Hours`]]},rt=({data:e})=>{const n=e.filter(s=>s.status==="Watching").map(s=>s.s.at(-1)).filter(s=>!s.endDate).sort((s,o)=>s.startDate<o.startDate?1:-1);return t.jsx(k,{icon:t.jsx(_,{}),title:"Currently Watching",content:n,width:[12,12,12],pictureWidth:[6,4,2],labelComponent:lt})},lt=e=>{var n;return[[`S ${e.s}`,((n=e.startDate)==null?void 0:n.toLocaleDateString())??""]]},k=e=>t.jsx(B,{MediaComponent:L,...e}),it=({data:e})=>{const[n,s]=x.useState(!0),l=(n?e.map(a=>[a.name,a,a.banner]):e.flatMap(a=>a.s.map(r=>[`${a.name} - S${r.s}${r.subtitle?" - "+r.subtitle:""}`,r,a.banner]))).map(([a,r,i])=>["*",a,ct(a,r,i),r.startDate,r.endDate??m]);return t.jsx(U,{data:l,children:t.jsx(M,{title:"Timeline",action:t.jsx(v,{row:!0,children:t.jsx(f,{label:"Combine Seasons",control:t.jsx(b,{checked:n,onChange:(a,r)=>s(r)})})})})})},ct=(e,n,s)=>{var o;return`
  <div style="display: flex;" class="backgroundPaper">
    ${s?`<img src="${s}" style="height: 150px" /><hr />`:""}  
    <div>     
      <ul style="list-style-type: none;padding: 5px">
        <li>
          <span><b>${e}</b></span>
        </li>
      </ul>
      <hr />
      <ul style="list-style-type: none;padding-left: 10px">
        <li>
          <span><b>Hours: </b></span>
          <span">${Math.round(n.minutes/60)}</span>
        </li>
        <li>
          <span><b>Period: </b></span>
          <span>${n.startDate.toLocaleDateString()} - ${(o=n.endDate)==null?void 0:o.toLocaleDateString()} </span>
        </li>
        <li>
          <span><b>Episodes: </b></span>
          <span>${n.e}</span>
        </li>
      </ul>
    </div>     
  </div>
  `},jt=({data:e})=>t.jsxs($,{spacing:2,children:[t.jsx(Z,{data:e}),t.jsx(it,{data:e}),t.jsx(K,{data:e,measure:"Hours"}),t.jsx(N,{title:"All Shows",data:e,width:3,colour:C,MediaComponent:L})]});export{jt as default};
//# sourceMappingURL=Graphs-0f924aa0.js.map
