import{r as g,j as t,d as S,C as j,T as x,a as M}from"./index-mTVLBmNh.js";import{B as A,C as $,F as w,S as H,a as F,D as h,s as m,T as v,b as O,c as P,d as R,e as W,f as D,U as G,g as Y,A as I,P as U,h as _,i as B,j as N,k as K,l as q}from"./Timeline-CYJPFfwt.js";import{S as T}from"./Stack-DrymOO3U.js";import{F as b,S as C,G as E,T as z}from"./Timer-CaBTRXk5.js";import{a as J}from"./index-_qugNN_q.js";const Q={name:!1,status:!0,none:!1},V=({data:e,measure:n})=>{const[s,o]=g.useState("none"),[l,a]=g.useState(!1),[r,i]=g.useState(!0),c=e.flatMap(u=>u.s),d=X(c,s,n,l);return t.jsx(A,{grouped:d,cumulative:l,stack:r,children:t.jsx($,{title:n==="Episodes"?"Episodes Watched":"Hours Watched",action:t.jsxs(w,{children:[t.jsx(H,{options:Object.keys(Q),value:s,setValue:o}),t.jsxs(T,{direction:"row",children:[t.jsx(b,{label:"Cumulative",control:t.jsx(C,{checked:l,onChange:(u,p)=>a(p)})}),t.jsx(b,{label:"Stack",control:t.jsx(C,{checked:r,onChange:(u,p)=>i(p),disabled:l})})]})]})})})},X=(e,n,s,o)=>{const l=e.reduce((a,r)=>{var u,p;const{show:i}=r,c=n==="none"?"":i[n],d=o?(u=r.startDate)==null?void 0:u.toISOString().substring(0,7):(p=r.startDate)==null?void 0:p.getFullYear().toString();return!d||!r.minutes||(a[c]??(a[c]={color:"",data:{}}),a[c].data[d]=(a[c].data[d]||0)+(s==="Episodes"?r.e:r.minutes)),a},{});return s==="Hours"&&Object.values(l).forEach(({data:a})=>Object.entries(a).forEach(([r,i])=>a[r]=Math.floor(i/60))),l},Z=e=>"name"in e,k=({item:e,...n})=>{const s=Z(e)?e:e.show;return t.jsx(F,{alt:s.name,image:s.banner,detailComponent:o=>{var l;return t.jsx(J,{sx:{background:o,color:a=>o&&a.palette.getContrastText(o)},children:t.jsxs(E,{container:!0,spacing:1,children:[t.jsx(tt,{colour:o,item:s}),t.jsx(h,{colour:o,label:"Start Date",value:s.startDate.toLocaleDateString()}),t.jsx(h,{colour:o,label:"End Date",value:(l=s.endDate)==null?void 0:l.toLocaleDateString()}),t.jsx(h,{colour:m(s),label:"Status",value:s.status}),t.jsx(h,{colour:o,label:"Last Watched",value:`S${s.s.length}E${s.s.at(-1).e}`}),t.jsx(h,{colour:o,label:"Hours",value:Math.floor(s.minutes/60)}),t.jsx(h,{colour:o,label:"Episodes",value:s.e})]})})},...n})},y=new Date(2008,0,1),f=S(y,j),tt=({colour:e,item:n})=>{if(!n.startDate||n.startDate<y)return null;let s=y;const o=n.s.flatMap((l,a)=>{const r=[];if(s<l.startDate){const u=S(s,l.startDate)/f*100;r.push(t.jsx(v,{percent:u},`${l.s}-before`))}const i=l.endDate??j,c=Math.max(S(l.startDate,i)/f*100,.5);return r.push(t.jsx(O,{percent:c,backgroundColour:[`${a%2===0?"secondary":"primary"}.light`,`${a%2===0?"secondary":"primary"}.main`],tooltip:t.jsxs(t.Fragment,{children:[t.jsxs(x,{variant:"h6",align:"center",children:["S",l.s]}),t.jsxs(x,{children:[l.startDate.toLocaleDateString()," - ",i.toLocaleDateString()]}),t.jsxs(x,{children:[l.e," Episodes"]}),t.jsxs(x,{children:[Math.floor(l.minutes/60)," Hours"]})]})},l.s)),s=new Date(i),s.setDate(s.getDate()+1),r});if(s<j){const a=S(s,j)/f*100;o.push(t.jsx(v,{percent:a},"last"))}return t.jsx(P,{segments:o,colour:e})},et=({data:e})=>t.jsxs(E,{container:!0,spacing:1,alignItems:"stretch",children:[t.jsx(at,{data:e}),t.jsx(nt,{data:e}),t.jsx(ot,{data:e}),t.jsx(rt,{data:e}),t.jsx(st,{data:e}),t.jsx(ct,{data:e}),t.jsx(lt,{data:e})]}),st=({data:e})=>{const n=["Watching","Up To Date","Ended","Cancelled","Abandoned"];return t.jsx(E,{xs:12,children:t.jsx(T,{justifyContent:"space-between",height:"100%",spacing:1,children:t.jsx(R,{title:"Status",icon:t.jsx(W,{}),data:e,groupKey:"status",group:n,groupToColour:s=>m({status:s}),measureLabel:"Shows"})})})},at=({data:e})=>{const n=e.length,s=e.sum("e"),o=Math.floor(e.sum("minutes")/60);return t.jsx(D,{icon:t.jsx(z,{}),title:"All Time",content:[["Shows",n],["Episodes",s],["Hours",o]]})},nt=({data:e})=>{const n=e.flatMap(a=>a.s).filter(a=>a.startDate.getFullYear()===M),s=n.length,o=n.sum("e"),l=Math.floor(n.sum("minutes")/60);return t.jsx(D,{icon:t.jsx(G,{}),title:`In ${M}`,content:[["Seasons",s],["Episodes",o],["Hours",l]]})},ot=({data:e})=>{const n=e.flatMap(a=>a.s).reduce((a,r)=>{const i=r.startDate.getFullYear().toString();return!i||!r.minutes||(a[i]??(a[i]=[0,0,0]),a[i]=[a[i][0]+1,a[i][1]+r.e,a[i][2]+r.minutes]),a},{}),s=Math.floor(Object.values(n).sum(0)/Object.keys(n).length),o=Math.floor(Object.values(n).sum(1)/Object.keys(n).length),l=Math.floor(Object.values(n).sum(2)/Object.keys(n).length/60);return t.jsx(D,{icon:t.jsx(Y,{}),title:"Yearly Average",content:[["Seasons",s],["Episodes",o],["Hours",l]]})},rt=({data:e})=>{const n=e.flatMap(a=>a.s),s=Math.round(n.length/e.length),o=Math.round(n.sum("e")/e.length),l=Math.floor(n.sum("minutes")/60/e.length);return t.jsx(D,{icon:t.jsx(I,{}),title:"Show Average",content:[["Seasons",s],["Episodes",o],["Hours",l]]})},lt=({data:e})=>{const n=e.flatMap(s=>s.s).filter(s=>s.endDate).sort((s,o)=>s.endDate<o.endDate?1:-1).slice(0,6);return t.jsx(L,{icon:t.jsx(U,{}),title:"Recently Finished",content:n,width:[12,12,12],pictureWidth:[6,4,2],chipComponent:({show:s})=>[s.status,m(s)],labelComponent:it})},it=e=>{var n;return[[`S ${e.s}`,((n=e.endDate)==null?void 0:n.toLocaleDateString())??""],[`${e.e} Eps`,`${_(Math.round(e.minutes/60))} Hours`]]},ct=({data:e})=>{const n=e.filter(s=>s.status==="Watching").map(s=>s.s.at(-1)).filter(s=>!s.endDate).sort((s,o)=>s.startDate<o.startDate?1:-1);return t.jsx(L,{icon:t.jsx(B,{}),title:"Currently Watching",content:n,width:[12,12,12],pictureWidth:[6,4,2],labelComponent:ut})},ut=e=>{var n;return[[`S ${e.s}`,((n=e.startDate)==null?void 0:n.toLocaleDateString())??""]]},L=e=>t.jsx(N,{MediaComponent:k,...e}),dt=({data:e})=>{const[n,s]=g.useState(!0),l=(n?e.map(a=>[a.name,a,m(a),a.banner]):e.flatMap(a=>a.s.map(r=>[`${a.name} - S${r.s}${r.subtitle?" - "+r.subtitle:""}`,r,m(a),a.banner]))).map(([a,r,i,c])=>({row:"*",name:a,tooltip:pt(a,r,c),colour:i,start:r.startDate,end:r.endDate??j}));return t.jsx(K,{data:l,children:t.jsx($,{title:"Timeline",action:t.jsx(w,{row:!0,children:t.jsx(b,{label:"Combine Seasons",control:t.jsx(C,{checked:n,onChange:(a,r)=>s(r)})})})})})},pt=(e,n,s)=>{var o;return`
  <div style="display: flex;" class="backgroundPaper">
    ${s?`<img src="${s}" style="height: 150px" /><hr />`:""}  
    <div>     
      <ul style="list-style-type: none;padding: 5px">
        <li>
          <span><b>${e}</b></span>
        </li>
      </ul>
      <hr />
      <ul style="list-style-type: none;padding-left: 10px">
        <li>
          <span><b>Hours: </b></span>
          <span">${Math.round(n.minutes/60)}</span>
        </li>
        <li>
          <span><b>Period: </b></span>
          <span>${n.startDate.toLocaleDateString()} - ${(o=n.endDate)==null?void 0:o.toLocaleDateString()} </span>
        </li>
        <li>
          <span><b>Episodes: </b></span>
          <span>${n.e}</span>
        </li>
      </ul>
    </div>     
  </div>
  `},St=({data:e})=>t.jsxs(T,{spacing:2,children:[t.jsx(et,{data:e}),t.jsx(dt,{data:e}),t.jsx(V,{data:e,measure:"Hours"}),t.jsx(q,{title:"All Shows",data:e,width:3,colour:m,MediaComponent:k})]});export{St as default};
//# sourceMappingURL=Graphs-C90Hmfgm.js.map
