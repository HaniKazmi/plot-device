{"version":3,"file":"static/js/481.9213bf39.chunk.js","mappings":"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","sources":["vg/Filter.tsx"],"sourcesContent":["import { FilterAlt, AllInclusive, QuestionMark, CatchingPokemon, Timer, Functions } from \"@mui/icons-material\";\nimport { SpeedDial, SpeedDialIcon, SpeedDialAction, Stack, Fab } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { Measure, VideoGame } from \"./types\";\nimport { Predicate } from \"../utils/types\";\n\nconst Filter = ({\n  setFilterFunc,\n  measure,\n  setMeasure,\n}: {\n  setFilterFunc: (func: () => Predicate<VideoGame>) => void;\n  measure: Measure;\n  setMeasure: (measure: Measure) => void;\n}) => {\n  const [filterEndless, setFilterEndless] = useState(false);\n  const [filterPokemon, setFilterPokemon] = useState(false);\n  const [filterUnconfirmed, setFilterUnconfirmed] = useState(false);\n\n  const updateFilter =\n    ({\n      endless = filterEndless,\n      pokemon = filterPokemon,\n      unconfirmed = filterUnconfirmed,\n    }: {\n      endless?: boolean;\n      pokemon?: boolean;\n      unconfirmed?: boolean;\n    }) =>\n    () => {\n      const filters = [\n        endless ? ({ status }: VideoGame) => status !== \"Endless\" : null,\n        pokemon ? ({ franchise }: VideoGame) => franchise !== \"PokÃ©mon\" : null,\n        unconfirmed\n          ? ({ platform, startDate }: VideoGame) => {\n              if (platform === \"PC\") {\n                if (!startDate?.getFullYear() || startDate?.getFullYear() < 2015) return false;\n              } else if (\n                platform !== \"Nintendo Switch\" &&\n                platform !== \"Nintendo 3DS\" &&\n                platform !== \"PlayStation 4\" &&\n                platform !== \"PlayStation 5\"\n              )\n                return false;\n\n              return true;\n            }\n          : null,\n      ];\n\n      setFilterEndless(endless);\n      setFilterPokemon(pokemon);\n      setFilterUnconfirmed(unconfirmed);\n      if (endless !== filterEndless || pokemon !== filterPokemon || unconfirmed !== filterUnconfirmed) {\n        setFilterFunc(\n          () => (vgData: VideoGame) =>\n            filters.filter((f): f is Exclude<typeof f, null> => Boolean(f)).reduce((p, c) => p && c(vgData), true)\n        );\n      }\n    };\n\n  useEffect(() => updateFilter({})(), []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fabProps = (enabled: boolean) =>\n    enabled ? { sx: { backgroundColor: \"primary.light\", \"&:hover\": { backgroundColor: \"primary.dark\" } } } : {};\n\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={2}\n      sx={{ position: \"fixed\", right: (theme) => theme.spacing(2), bottom: (theme) => theme.spacing(2) }}\n    >\n      <SpeedDial icon={<SpeedDialIcon icon={<FilterAlt />} />} ariaLabel=\"add\">\n        <SpeedDialAction\n          FabProps={fabProps(filterEndless)}\n          tooltipOpen\n          tooltipTitle=\"Endless\"\n          icon={<AllInclusive />}\n          onClick={updateFilter({ endless: !filterEndless })}\n        />\n        <SpeedDialAction\n          FabProps={fabProps(filterUnconfirmed)}\n          tooltipOpen\n          tooltipTitle=\"Unconfirmed\"\n          icon={<QuestionMark />}\n          onClick={updateFilter({ unconfirmed: !filterUnconfirmed })}\n        />\n        <SpeedDialAction\n          FabProps={fabProps(filterPokemon)}\n          tooltipOpen\n          tooltipTitle=\"Pokemon\"\n          icon={<CatchingPokemon />}\n          onClick={updateFilter({ pokemon: !filterPokemon })}\n        />\n      </SpeedDial>\n      <Fab color=\"secondary\" onClick={() => setMeasure(measure === \"Count\" ? \"Hours\" : \"Count\")}>\n        {measure === \"Count\" ? <Functions /> : <Timer />}\n      </Fab>\n    </Stack>\n  );\n};\n\nexport default Filter;\n"],"names":["_ref","setFilterFunc","measure","setMeasure","_useState","useState","_useState2","_slicedToArray","filterEndless","setFilterEndless","_useState3","_useState4","filterPokemon","setFilterPokemon","_useState5","_useState6","filterUnconfirmed","setFilterUnconfirmed","updateFilter","_ref2","_ref2$endless","endless","_ref2$pokemon","pokemon","_ref2$unconfirmed","unconfirmed","filters","_ref3","status","_ref4","franchise","_ref5","platform","startDate","getFullYear","vgData","filter","f","Boolean","reduce","p","c","useEffect","fabProps","enabled","sx","backgroundColor","_jsxs","Stack","direction","spacing","position","right","theme","bottom","children","SpeedDial","icon","_jsx","SpeedDialIcon","FilterAlt","ariaLabel","SpeedDialAction","FabProps","tooltipOpen","tooltipTitle","AllInclusive","onClick","QuestionMark","CatchingPokemon","Fab","color","Functions","Timer"],"sourceRoot":""}